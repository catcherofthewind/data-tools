#include <getopt.h>
#include <locale.h>
#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <wchar.h>
#include <wctype.h>

static struct option long_opts[] = {
  {"count-ascii", 0, NULL, 'c'},
  {"skip-ascii", 0, NULL, 's'},
  {"long-names", 0, NULL, 'l'},
  {0, 0, 0, 0}
};

<%= enum %>

<%= category_strings %>

<%= long_category_strings %>

void
usage(int exit_status) {
  fprintf(stderr, "USAGE: utf8-category [-l|--long-names] [-c|--count-ascii|-s|--skip-ascii]\n");
  exit(exit_status);
}

int
main(int argc, char **argv) {
  wchar_t ch;
  size_t counts[<%= num_categories %>];
  int flag, flag_count = 0;
  char *endptr;
  bool count_ascii = false;
  size_t ascii_cnt = 0;
  bool skip_ascii = false;
  bool long_names = false;

  while (true) {
    flag = getopt_long(argc, argv, "cls", long_opts, NULL);
    if (-1 == flag)
      break;
    switch(flag) {
    case 'c':
      count_ascii = true;
      flag_count += 1;
      break;
    case 'l':
      long_names = true;
      flag_count += 1;
      break;  
    case 's':
      skip_ascii = true;
      flag_count += 1;
      break;
    default:
      usage(1);
    }
  } 

  if ( argc - flag_count > 1)
    usage(1);

  int i;
  for (i = 0; i < <%= num_categories %>; ++i) {
    counts[i] = 0;
  }

  setlocale(LC_ALL, "");

  while ((ch = getwchar()) != WEOF) {
    if (skip_ascii && ch >= 0 && ch < 128)
      continue;
    if (count_ascii && ch >= 0 && ch < 128) {
      ++ascii_cnt;
      continue;
    }
<%= increment_counts %>
  }

  if (count_ascii)
    printf("%lu\t%s\n", ascii_cnt, long_names ? "ASCII" : "As");
  for (i = 0; i < <%= num_categories %>; ++i) {
    if (counts[i] > 0) {
      if (long_names)
        printf("%lu\t%s\n", counts[i], long_categories[i]);
      else
        printf("%lu\t%s\n", counts[i], categories[i]);
    }
  }

  if (ferror(stdin)) {
    perror("error reading from standard input: ");
    return 1;
  }
  return 0;
}
